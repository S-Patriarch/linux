//
// (c) 2024 S-Patriarch
//

#include <cstdlib>
#include <cstdint>
#include <iostream>
//------------------------------------------------------------------------------
std::uint8_t pack_bools(bool b1, bool b2, bool b3, bool b4,
                        bool b5, bool b6, bool b7, bool b8) 
   // функция упаковывает 8 значений типа bool в
   // переменную размером 1 байт
   // это значительно может сэкономить потребление памяти, поскольку
   // в логическом типе данных bool есть лишь два возможных значения
   // (true и false), которые могут быть представлены одним битом,
   // но по факту занимают целый байт памяти
   // а это, в свою очередь, из-за того, что переменные используют
   // уникальные адреса памяти, а они выделяются только в байтах
   // переменная bool занимает 1 бит, а другие 7 бит - тратятся впустую
{
   std::uint8_t p {0};
   p |= b1<<7;
   p |= b2<<6;
   p |= b3<<5;
   p |= b4<<4;
   p |= b5<<3;
   p |= b6<<2;
   p |= b7<<1;
   p |= b8;
   return p;
}
////////////////////////////////////////////////////////////////////////////////
int main()
{
   bool b1 {true};
   bool b2 {false};
   bool b3 {true};
   bool b4 {false};
   bool b5 {true};
   bool b6 {false};
   bool b7 {true};
   bool b8 {false};

   std::uint8_t p = ::pack_bools(b1,b2,b3,b4,b5,b6,b7,b8);
   std::cout << "Packed value: " << (int)p << '\n';

   std::exit(EXIT_SUCCESS);
}
